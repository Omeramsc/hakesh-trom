"""empty message

Revision ID: 9a13b9204047
Revises: d0636517ab6b
Create Date: 2020-04-07 22:21:59.207426

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
import json

# revision identifiers, used by Alembic.
revision = '9a13b9204047'
down_revision = 'd0636517ab6b'
branch_labels = None
depends_on = None

neighborhood_id = 0
supported_neighborhood_names = """
'רמת אביב ג
'תכנית ל
(יפו ד' (גבעת התמרים
אזור שדה דב
בבלי
גני צהלה, רמות צהלה
הדר-יוסף
המשתלה
יד אליהו
כוכב הצפון
נוה אביבים וסביבתה
נוה עופר
נופי ים
צהלה
צוקי אביב
צפון יפו
קרית שאול
קרית שלום
רמת-אביב
תל ברוך
""".splitlines()


def is_neighborhood_supported(neighborhood_data):
    return neighborhood_data['attributes']['shem_shchuna'] in supported_neighborhood_names


def serialize_tlv_neighborhood(neighborhood_data):
    global neighborhood_id
    neighborhood_id += 1

    return {
        'id': neighborhood_id,
        'name': neighborhood_data['attributes']['shem_shchuna'],
        'city_name': 'תל - אביב - יפו',
        'geometry': neighborhood_data['geometry']['rings'][0]
    }


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    neighborhoods_table = op.create_table('neighborhoods',
                                          sa.Column('id', sa.Integer(), nullable=False),
                                          sa.Column('name', sa.String(), nullable=False),
                                          sa.Column('city_name', sa.String(), nullable=False),
                                          sa.Column('geometry', postgresql.JSON(astext_type=sa.Text()), nullable=True),
                                          sa.PrimaryKeyConstraint('id')
                                          )
    op.create_table('teams',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('name', sa.Text(), nullable=True),
                    sa.Column('campaign_id', sa.Integer(), nullable=True),
                    sa.Column('neighborhood_id', sa.Integer(), nullable=True),
                    sa.ForeignKeyConstraint(['campaign_id'], ['campaigns.id'], ),
                    sa.ForeignKeyConstraint(['neighborhood_id'], ['neighborhoods.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.add_column('users', sa.Column('team_id', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'users', 'teams', ['team_id'], ['id'])
    # ### end Alembic commands ###

    # Seed neighborhoods
    with open('./seed_data/neighborhoods.json', encoding='utf-8') as json_file:
        neighborhoods_data = json.load(json_file)
    clean_neighborhoods_data = list(
        map(serialize_tlv_neighborhood,
            filter(is_neighborhood_supported, neighborhoods_data['features'])))
    op.bulk_insert(neighborhoods_table, clean_neighborhoods_data)


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'users', type_='foreignkey')
    op.drop_column('users', 'team_id')
    op.drop_table('teams')
    op.drop_table('neighborhoods')
    # ### end Alembic commands ###
